#!/bin/bash

# Copyright (c) Rafael SÃ¡nchez
# This file is part of 'DevControl'
# a very simple Home Automation app.

# This script can be used outside the DevControl machine.

# Sample values, configure yours:
devcontrol_server="rpi3clac.local"
plug="Taurus"
delay=20
max_attempts=10


function print_help {
    echo
    echo "    Smart Plug switch-off command, through by a DevControl server,"
    echo "    delayed N seconds"
    echo
    echo "    Usage: smart_plug_off_Nsec.sh [ n ]"
    echo
    echo "           default  n = 20 s"
    echo
}


function order_plug_off {

    plug_status_cmd='echo plug { "target": "'$plug'", "mode": "status" } | nc '$devcontrol_server' 9950'

    plug_off_cmd='echo plug { "target": "'$plug'", "mode": "off", "delay": '$delay' } | nc '$devcontrol_server' 9950'

    plug_ans=""
    attempt=0
    while [[ "$attempt" -lt "$max_attempts" ]]; do

        echo $plug_status_cmd

        # Need to escape quotes before doing eval
        tmp=${plug_status_cmd//\"/\\\"}
        plug_ans=$(eval "$tmp")

        if [[ "$plug_ans" == "on" || "$plug_ans" == "off" ]]; then
            plug_available=1
            break
        fi

        attempt=$((attempt + 1))
        sleep 5

    done

    if [[ plug_available -eq 1 ]]; then

        tmp=${plug_off_cmd//\"/\\\"}
        plug_ans=$(eval "$tmp")
        echo $plug_ans

    else
        echo "plug NOT available"

    fi
}


if [[ $1 ]]; then

    if [[ $1 == *"-h"* ]]; then
        print_help
        exit 0
    fi

    delay=$1
fi

# Check if given delay is integer
if [[ "$delay" =~ ^-?[0-9]+$ ]]; then
    :
else
    echo "Delay must be integer, using the default 20 sec."
    delay=20
fi

# Ordering
order_plug_off

exit 0
